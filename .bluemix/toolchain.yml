---
name: "What is for dinner Toolchain"
description: "Microservices Cloud Foundry reference application Toolchain"
version: 0.1
required:
 - deploy

#Github repos
git-wfd-eureka:
  service_id: githubpublic
  parameters:
    repo_name: "eureka-cf-clone"
    repo_url: "https://github.com/ibm-cloud-architecture/refarch-cloudnative-netflix-eureka"
    type: clone
    has_issues: false

#git-wfd-config-server:
#  service_id: githubpublic
#  parameters:
#    repo_name: "config-cf-clone"
#    repo_url: "https://github.com/ibm-cloud-architecture/refarch-cloudnative-spring-config"
#    type: clone
#    has_issues: false
#
#git-wfd-zuul:
#  service_id: githubpublic
#  parameters:
#    repo_name: "zuul-cf-clone"
#    repo_url: "https://github.com/ibm-cloud-architecture/refarch-cloudnative-netflix-zuul"
#    type: clone
#    has_issues: false
#
#git-wfd-menu:
#  service_id: githubpublic
#  parameters:
#    repo_name: "menu-cf-clone"
#    repo_url: "https://github.com/ibm-cloud-architecture/refarch-cloudnative-wfd-menu"
#    type: clone
#    has_issues: false
#
#git-wfd-appetizer:
#  service_id: githubpublic
#  parameters:
#    repo_name: "appetizer-cf-clone"
#    repo_url: "https://github.com/ibm-cloud-architecture/refarch-cloudnative-wfd-appetizer"
#    type: clone
#    has_issues: false
#
#git-wfd-entree:
#  service_id: githubpublic
#  parameters:
#    repo_name: "entree-cf-clone"
#    repo_url: "https://github.com/ibm-cloud-architecture/refarch-cloudnative-wfd-entree"
#    type: clone
#    has_issues: false
#
#git-wfd-dessert:
#  service_id: githubpublic
#  parameters:
#    repo_name: "dessert-cf-clone"
#    repo_url: "https://github.com/ibm-cloud-architecture/refarch-cloudnative-wfd-dessert"
#    type: clone
#    has_issues: false
#
#git-wfd-menu-ui:
#  service_id: githubpublic
#  parameters:
#    repo_name: "menu-ui-cf-clone"
#    repo_url: "https://github.com/ibm-cloud-architecture/refarch-cloudnative-wfd-ui"
#    type: clone
#    has_issues: false

#Pipelines
pipeline-wfd-eureka-cf:
  service_id: pipeline
  parameters:
    name: "wfd-eureka-cf"
    ui-pipeline: true
    configuration:
      content: $file(wfd_eureka_cf_pipeline.yml)
      env:
       # Build java stage env variables
       REPO: "git-wfd-eureka-cf"
       # Deploy stage env variable
       BUILD_TARGET: "build/libs/eureka-0.0.1-SNAPSHOT.jar"
       REGION: "{{deploy.parameters.deploy-region}}"
       ORG: "{{deploy.parameters.deploy-org}}"
       SPACE: "{{deploy.parameters.deploy-space}}"
       DOMAIN: "{{deploy.parameters.route-domain}}"
       APP_NAME: "{{pipeline-wfd-eureka.parameters.name}}"
       DEPLOYMENT_SUFFIX: "toolchain"
       SERVICE_DISCOVERY_UPS: "eureka-service-discovery"
      execute: false
    services: ["git-wfd-eureka-cf"]
  hidden: [form, description]

#pipeline-wfd-config:
#  service_id: pipeline
#  parameters:
#    name: "wfd-config"
#    ui-pipeline: true
#    configuration:
#      content: $file(wfd_config_server_pipeline.yml)
#      env:
#       # Build java stage env variables
#       DOCKER_DIR: "docker"
#       BUILD_TARGET: "build/libs/config-server-0.0.1-SNAPSHOT.jar"
#       REPO: "git-wfd-config-server"
#       # Build container stage env variables
#       REGION: "{{deploy.parameters.deploy-region}}"
#       ORG: "{{deploy.parameters.deploy-org}}"
#       SPACE: "{{deploy.parameters.deploy-space}}"
#       NAME: "{{pipeline-wfd-config.parameters.name}}"
#       LABEL_PREFIX: "toolchain"
#       # Deploy stage env variables
#       PORT: "8888"
#       MIN_INSTANCES: "1"
#       MAX_INSTANCES: "2"
#       DESIRED_INSTANCES: "1"
#       CONCURRENT_VERSIONS: "1"
#       #AUTO_RECOVERY: "false"
#       CONTAINER_SIZE: "micro"
#       #IGNORE_MAPPING_ROUTE: "true"
#       CONFIG_SERVER_UPS: "config-server-ic"
#       BRIDGE_APP: "container_bridge_app"
#      execute: false
#    services: ["git-wfd-config-server"]
#  hidden: [form, description]
#
#pipeline-wfd-appetizer:
#  service_id: pipeline
#  parameters:
#    name: "wfd-appetizer"
#    ui-pipeline: true
#    configuration:
#      content: $file(wfd-template.yml)
#      env:
#       # Build java stage env variables
#       DOCKER_DIR: "docker"
#       BUILD_TARGET: "build/libs/wfd-appetizer-0.0.1-SNAPSHOT.jar"
#       REPO: "git-wfd-appetizer"
#       # Build container stage env variables
#       REGION: "{{deploy.parameters.deploy-region}}"
#       ORG: "{{deploy.parameters.deploy-org}}"
#       SPACE: "{{deploy.parameters.deploy-space}}"
#       NAME: "{{pipeline-wfd-appetizer.parameters.name}}"
#       LABEL_PREFIX: "toolchain"
#       # Deploy stage env variables
#       PORT: "8082"
#       MIN_INSTANCES: "1"
#       MAX_INSTANCES: "2"
#       DESIRED_INSTANCES: "1"
#       CONCURRENT_VERSIONS: "1"
#       #AUTO_RECOVERY: "false"
#       CONTAINER_SIZE: "micro"
#       IGNORE_MAPPING_ROUTE: "yes"
#       BRIDGE_APP: "container_bridge_app"
#       ROUTE_DOMAIN: null
#       ROUTE_HOSTNAME: null
#      execute: false
#    services: ["git-wfd-appetizer"]
#  hidden: [form, description]
#
#pipeline-wfd-entree:
#  service_id: pipeline
#  parameters:
#    name: "wfd-entree"
#    ui-pipeline: true
#    configuration:
#      content: $file(wfd-template.yml)
#      env:
#       # Build java stage env variables
#       DOCKER_DIR: "docker"
#       BUILD_TARGET: "build/libs/wfd-entree-0.0.1-SNAPSHOT.jar"
#       REPO: "git-wfd-entree"
#       # Build container stage env variables
#       REGION: "{{deploy.parameters.deploy-region}}"
#       ORG: "{{deploy.parameters.deploy-org}}"
#       SPACE: "{{deploy.parameters.deploy-space}}"
#       NAME: "{{pipeline-wfd-entree.parameters.name}}"
#       LABEL_PREFIX: "toolchain"
#       # Deploy stage env variables
#       PORT: "8081"
#       MIN_INSTANCES: "1"
#       MAX_INSTANCES: "2"
#       DESIRED_INSTANCES: "1"
#       CONCURRENT_VERSIONS: "1"
#       #AUTO_RECOVERY: "false"
#       CONTAINER_SIZE: "micro"
#       IGNORE_MAPPING_ROUTE: "yes"
#       BRIDGE_APP: "container_bridge_app"
#       ROUTE_DOMAIN: null
#       ROUTE_HOSTNAME: null
#      execute: false
#    services: ["git-wfd-entree"]
#  hidden: [form, description]
#
#pipeline-wfd-dessert:
#  service_id: pipeline
#  parameters:
#    name: "wfd-dessert"
#    ui-pipeline: true
#    configuration:
#      content: $file(wfd-template.yml)
#      env:
#       # Build java stage env variables
#       DOCKER_DIR: "docker"
#       BUILD_TARGET: "build/libs/wfd-dessert-0.0.1-SNAPSHOT.jar"
#       REPO: "git-wfd-dessert"
#       # Build container stage env variables
#       REGION: "{{deploy.parameters.deploy-region}}"
#       ORG: "{{deploy.parameters.deploy-org}}"
#       SPACE: "{{deploy.parameters.deploy-space}}"
#       NAME: "{{pipeline-wfd-dessert.parameters.name}}"
#       LABEL_PREFIX: "toolchain"
#       # Deploy stage env variables
#       PORT: "8083"
#       MIN_INSTANCES: "1"
#       MAX_INSTANCES: "2"
#       DESIRED_INSTANCES: "1"
#       CONCURRENT_VERSIONS: "1"
#       #AUTO_RECOVERY: "false"
#       CONTAINER_SIZE: "micro"
#       IGNORE_MAPPING_ROUTE: "yes"
#       BRIDGE_APP: "container_bridge_app"
#       ROUTE_DOMAIN: null
#       ROUTE_HOSTNAME: null
#      execute: false
#    services: ["git-wfd-dessert"]
#  hidden: [form, description]
#
#pipeline-wfd-menu:
#  service_id: pipeline
#  parameters:
#    name: "wfd-menu"
#    ui-pipeline: true
#    configuration:
#      content: $file(wfd-template.yml)
#      env:
#       # Build java stage env variables
#       DOCKER_DIR: "docker"
#       BUILD_TARGET: "build/libs/wfd-menu-0.0.1-SNAPSHOT.jar"
#       REPO: "git-wfd-menu"
#       # Build container stage env variables
#       REGION: "{{deploy.parameters.deploy-region}}"
#       ORG: "{{deploy.parameters.deploy-org}}"
#       SPACE: "{{deploy.parameters.deploy-space}}"
#       NAME: "{{pipeline-wfd-menu.parameters.name}}"
#       LABEL_PREFIX: "toolchain"
#       # Deploy stage env variables
#       PORT: "8180"
#       MIN_INSTANCES: "1"
#       MAX_INSTANCES: "2"
#       DESIRED_INSTANCES: "1"
#       CONCURRENT_VERSIONS: "1"
#       #AUTO_RECOVERY: "false"
#       CONTAINER_SIZE: "micro"
#       IGNORE_MAPPING_ROUTE: "yes"
#       BRIDGE_APP: "container_bridge_app"
#       ROUTE_DOMAIN: null
#       ROUTE_HOSTNAME: null
#      execute: false
#    services: ["git-wfd-menu"]
#  hidden: [form, description]
#
#pipeline-wfd-zuul:
#  service_id: pipeline
#  parameters:
#    name: "wfd-zuul"
#    ui-pipeline: true
#    configuration:
#      content: $file(wfd-template.yml)
#      env:
#       # Build java stage env variables
#       DOCKER_DIR: "docker"
#       BUILD_TARGET: "build/libs/zuul-proxy-0.0.1-SNAPSHOT.jar"
#       REPO: "git-wfd-zuul"
#       # Build container stage env variables
#       REGION: "{{deploy.parameters.deploy-region}}"
#       ORG: "{{deploy.parameters.deploy-org}}"
#       SPACE: "{{deploy.parameters.deploy-space}}"
#       NAME: "{{pipeline-wfd-zuul.parameters.name}}"
#       LABEL_PREFIX: "toolchain"
#       # Deploy stage env variables
#       PORT: "8080"
#       MIN_INSTANCES: "1"
#       MAX_INSTANCES: "2"
#       DESIRED_INSTANCES: "1"
#       CONCURRENT_VERSIONS: "1"
#       #AUTO_RECOVERY: "false"
#       CONTAINER_SIZE: "micro"
#       IGNORE_MAPPING_ROUTE: "yes"
#       BRIDGE_APP: "container_bridge_app"
#       ROUTE_DOMAIN: null
#       ROUTE_HOSTNAME: null
#      execute: false
#    services: ["git-wfd-zuul"]
#  hidden: [form, description]
#
#pipeline-wfd-menu-ui:
#  service_id: pipeline
#  parameters:
#    name: "wfd-menu-ui"
#    ui-pipeline: true
#    configuration:
#      content: $file(wfd-template.yml)
#      env:
#       # Build java stage env variables
#       DOCKER_DIR: "docker"
#       BUILD_TARGET: "build/libs/wfd-ui-0.0.1-SNAPSHOT.jar"
#       REPO: "git-wfd-menu-ui"
#       # Build container stage env variables
#       REGION: "{{deploy.parameters.deploy-region}}"
#       ORG: "{{deploy.parameters.deploy-org}}"
#       SPACE: "{{deploy.parameters.deploy-space}}"
#       NAME: "{{pipeline-wfd-menu-ui.parameters.name}}"
#       LABEL_PREFIX: "toolchain"
#       # Deploy stage env variables
#       PORT: "8181"
#       MIN_INSTANCES: "1"
#       MAX_INSTANCES: "2"
#       DESIRED_INSTANCES: "1"
#       CONCURRENT_VERSIONS: "1"
#       #AUTO_RECOVERY: "false"
#       CONTAINER_SIZE: "micro"
#       IGNORE_MAPPING_ROUTE: null
#       BRIDGE_APP: "container_bridge_app"
#       ROUTE_DOMAIN: "{{deploy.parameters.route-domain}}"
#       ROUTE_HOSTNAME: "{{deploy.parameters.route-hostname}}"
#      execute: false
#    services: ["git-wfd-menu-ui"]
#  hidden: [form, description]

deploy:
  schema:
    $ref: deployment_schema.json
  service-category: pipeline
  parameters:
    deploy-region: "{{region}}"
    deploy-org: "{{organization}}"
    deploy-space: "{{space}}"
    route-domain: "mybluemix.net"
    context-path: "micro"
